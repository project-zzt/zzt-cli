#!/usr/bin/env bash
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

CLI_TMP_NAME="zzt-"$(date +"%s")
CLI_DOWNLOAD_URL_PATTERN="https://github.com/project-zzt/zzt-cli/releases/latest/download/zzt-cli_~platform~.tar.gz"
CLI_TMPDIR="${TMPDIR:-/tmp}"

function output {
    style_start=""
    style_end=""
    if [ "${2:-}" != "" ]; then
    case $2 in
        "success")
            style_start="\033[0;32m"
            style_end="\033[0m"
            ;;
        "error")
            style_start="\033[31;31m"
            style_end="\033[0m"
            ;;
        "info"|"warning")
            style_start="\033[33m"
            style_end="\033[39m"
            ;;
        "heading")
            style_start="\033[1;33m"
            style_end="\033[22;39m"
            ;;
    esac
    fi

    builtin echo -e "${style_start}${1}${style_end}"
}

output "zzt cli installer" "heading"

CLI_EXECUTABLE="zzt"
binary_dest="${HOME}/.zzt/bin"


# ENVIRONMENT
downloader=""
if command -v curl >/dev/null 2>&1; then
    downloader="curl"
    output "  [*] cURL is installed" "success"
elif command -v wget >/dev/null 2>&1; then
    downloader="wget"
    output "  [*] wget is installed" "success"
else
    output "  [ ] ERROR: cURL or wget is required for installation." "error"
    exit 1
fi

if command -v tar >/dev/null 2>&1; then
    output "  [*] Tar is installed" "success"
else
    output "  [ ] ERROR: Tar is required for installation." "error"
    exit 1
fi

if command -v git >/dev/null 2>&1; then
    output "  [*] Git is installed" "success"
else
    output "  [ ] Warning: Git will be needed." "warning"
fi

kernel=$(uname -s 2>/dev/null || /usr/bin/uname -s)
case ${kernel} in
    "Linux"|"linux")
        kernel="linux"
        ;;
    "Darwin"|"darwin")
        kernel="darwin"
        ;;
    *)
        output "OS '${kernel}' not supported" "error"
        exit 1
        ;;
esac

machine=$(uname -m 2>/dev/null || /usr/bin/uname -m)
case ${machine} in
    arm|armv6*)
        machine="armv6"
        ;;
    armv7*)
        # ARMv6 is upwards compatible with ARMv7
        machine="armv6"
        ;;
    aarch64*|armv8*|arm64)
        machine="arm64"
        ;;
    i[36]86)
        machine="386"
        if [ "darwin" = "${kernel}" ]; then
            output "  [ ] Your architecture (${machine}) is not supported anymore" "error"
            exit 1
        fi
        ;;
    x86_64)
        machine="amd64"
        ;;
    *)
        output "  [ ] Your architecture (${machine}) is not currently supported" "error"
        exit 1
        ;;
esac

output "  [*] Your architecture (${machine}) is supported" "success"

if [ "darwin" = "${kernel}" ]; then
    machine="all"
fi

platform="${kernel}_${machine}"


# DOWNLOAD
output "\nDownload" "heading"

latest_url=${CLI_DOWNLOAD_URL_PATTERN/~platform~/${platform}}
output "  Downloading ${latest_url}...";
case $downloader in
    "curl")
        curl --fail --location "${latest_url}" > "${CLI_TMPDIR}/${CLI_TMP_NAME}.tar.gz"
        ;;
    "wget")
        wget -q --show-progress "${latest_url}" -O "${CLI_TMPDIR}/${CLI_TMP_NAME}.tar.gz"
        ;;
esac

# shellcheck disable=SC2181
if [ $? != 0 ]; then
    output "  The download failed." "error"
    exit 1
fi

output "  Uncompress binary..."
tar -xz --directory "${CLI_TMPDIR}" -f "${CLI_TMPDIR}/${CLI_TMP_NAME}.tar.gz"
rm "${CLI_TMPDIR}/${CLI_TMP_NAME}.tar.gz"

if [ ! -d "${binary_dest}" ]; then
    if ! mkdir -p "${binary_dest}"; then
        binary_dest="."
    fi
fi

output "  Installing the binary into your home directory..."

if mv "${CLI_TMPDIR}/zzt" "${binary_dest}/zzt"; then
    output "  The binary was saved to: ${binary_dest}/zzt"
else
    output "  Failed to move the binary to ${binary_dest}." "error"
    rm "${CLI_TMPDIR}/zzt"
    exit 1
fi


# FINISH
output "\nThe zzt cli was installed successfully!" "success"

output "\nUse it as a local file:" "info"
output "  ${binary_dest}/${CLI_EXECUTABLE}"
output "\nOr add the following line to your shell configuration file:" "info"
output "  export PATH=\"\$HOME/.zzt/bin:\$PATH\""
output "\nOr install it globally on your system:" "info"
output " mv ${binary_dest}/${CLI_EXECUTABLE} /usr/local/bin/${CLI_EXECUTABLE}"
output "\nIf moving the file does not work, you might have to prefix the command with sudo."
output "\nThen start a new shell and run '${CLI_EXECUTABLE}'" "info"
